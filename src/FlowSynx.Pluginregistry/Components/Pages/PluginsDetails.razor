@page "/plugins/{Type}/{Version}"

@using System.Text.Json
@using System.Security.Claims
@using FlowSynx.PluginRegistry.Application.Features.Plugins.Query.PluginDetails
@using FlowSynx.PluginRegistry.Application.Wrapper
@using FlowSynx.Pluginregistry.Helpers
@using FlowSynx.Pluginregistry.Services
@using FlowSynx.Pluginregistry.Components.Shared;

@inject NavigationManager Navigation
@inject IStatsApiService Stats

<PageTitle>Plugin details</PageTitle>

<div class="container p-5">
    <div class="row">
        @if (plugin == null)
        {
            <div class="col-md-12 mx-auto">
                <div class="card mb-3">
                    <div class="card-body">
                        <p>Loading ...</p>
                    </div>
                </div>
            </div>
        }
        else if (!plugin.Succeeded)
        {
            <div class="col-md-12 mx-auto">
                <div class="card mb-3">
                    <div class="card-body">
                        @string.Join(Environment.NewLine, plugin.Messages)
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row gx-5">
                <div class="col-xl-8">
                    <h2 class="fw-bolder mb-1">@plugin.Data.Type</h2>
                    <h5 class="fw-bolder mb-3 text-muted">Version: @plugin.Data.Version</h5>
                    <div class="position-relative mb-3">
                        <CodeCopy CodeToCopy="@jsonCodeBlock" ButtonText="Copy" SuccessText="Copied!" />
                        <pre class="plugin-code-block"><code>@jsonCodeBlock</code>
                        </pre>
                    </div>
                    <p>@plugin.Data.Description</p>

                    <div class="container mt-4">
                        <ul class="nav nav-tabs" id="myTab" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home"
                                        type="button" role="tab" aria-controls="home" aria-selected="true">
                                    Home
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile"
                                        type="button" role="tab" aria-controls="profile" aria-selected="false">
                                    Profile
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="contact-tab" data-bs-toggle="tab" data-bs-target="#contact"
                                        type="button" role="tab" aria-controls="contact" aria-selected="false">
                                    Contact
                                </button>
                            </li>
                        </ul>

                        <div class="tab-content mt-3" id="myTabContent">
                            <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
                                <p>Welcome to the Home tab!</p>
                            </div>
                            <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">
                                <p>This is the Profile tab.</p>
                            </div>
                            <div class="tab-pane fade" id="contact" role="tabpanel" aria-labelledby="contact-tab">
                                <p>Here’s the Contact tab content.</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-4">
                    <div class="card border bg-light mt-xl-5">
                        <div class="card-body p-3">
                            <div class="d-flex">
                                <div>
                                    <div class="h4 fw-bolder">About</div>
                                    <div class="mb-3">
                                        <i class="bi bi-clock-history text-secondary"></i>
                                        last updated: @TimeHelper.GetLastUpdatedText(plugin.Data.LastUpdated)
                                    </div>
                                    @if (!string.IsNullOrEmpty(plugin.Data.Url))
                                    {
                                    <div class="mb-3">
                                        <i class="bi bi-globe text-secondary"></i>
                                        <a href="@plugin.Data.Url" target="_blank">@plugin.Data.Url</a>
                                    </div>
                                    }

                                    @if (plugin.Data.Owners.Any())
                                    {
                                        <div class="mb-3">
                                            <h6>Owners</h6>
                                            @foreach (var owner in plugin.Data.Owners)
                                            {
                                                <a class="me-2" href="/profile/@owner">@owner</a>
                                            }
                                        </div>
                                    }
                                    @{
                                        @if (plugin.Data.Tags.Any())
                                        {
                                            <div class="mb-3">
                                                <h6>Tags</h6>
                                                @foreach (var tag in plugin.Data.Tags)
                                                {
                                                    <a href="/plugins?q=tag:@tag"><span class="badge border border-secondary text-secondary me-1">@tag</span></a>
                                                }
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Type { get; set; } = "";

    [Parameter]
    public string Version { get; set; } = "";

    private string jsonCodeBlock => JsonSerializer.Serialize(new
    {
        Type,
        Version
    }, new JsonSerializerOptions { WriteIndented = true });

    Result<PluginDetailsResponse>? plugin;
    protected override async Task OnInitializedAsync()
    {
        plugin = await Stats.GetPluginDetails(Type, Version);
    }
}