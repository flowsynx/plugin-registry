@page "/plugins/{Type}/{Version}"

@using System.Text.Json
@using System.Security.Claims
@using FlowSynx.PluginRegistry.Application.Features.Plugins.Query.PluginDetails
@using FlowSynx.PluginRegistry.Application.Wrapper
@using FlowSynx.Pluginregistry.Helpers
@using FlowSynx.Pluginregistry.Services
@using FlowSynx.Pluginregistry.Components.Shared;

@inject NavigationManager Navigation
@inject IStatsApiService Stats

<PageTitle>Plugin details</PageTitle>

<div class="container p-5">
    <div class="row">
        @if (plugin == null)
        {
            <div class="col-md-12 mx-auto">
                <div class="card mb-3">
                    <div class="card-body">
                        <p>Loading ...</p>
                    </div>
                </div>
            </div>
        }
        else if (!plugin.Succeeded)
        {
            <div class="col-md-12 mx-auto">
                <div class="card mb-3">
                    <div class="card-body">
                        @string.Join(Environment.NewLine, plugin.Messages)
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col-md-9 mx-auto">
                    <h2 class="fw-bolder mb-1">
                        <img src="/api/plugins/@plugin.Data.Type/@plugin.Data.Version/icon" height="64" width="64" />
                        @plugin.Data.Type
                    </h2>
                    <h5 class="fw-bolder mb-4 text-muted">Version: @plugin.Data.Version</h5>
                    <div class="position-relative mb-2">
                        <CodeCopy CodeToCopy="@jsonCodeBlock" />
                        <pre class="plugin-code-block border bg-light"><code>@jsonCodeBlock</code>
                        </pre>
                    </div>

                    <p class="p-2 border">@plugin.Data.Description</p>

                    <div class="mt-5">
                        <ul class="nav nav-tabs" id="pluginDetailsTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="reame-tab" data-bs-toggle="tab" data-bs-target="#readme" type="button"
                                        role="tab" aria-controls="readme" aria-selected="true">
                                    <i class="bi bi-file-text"></i> README
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="versions-tab" data-bs-toggle="tab" data-bs-target="#versions" type="button"
                                        role="tab" aria-controls="versions" aria-selected="false">
                                    <i class="bi bi-stopwatch"></i> Versions
                                </button>
                            </li>
                        </ul>
                        <div class="tab-content mt-2" id="myTabContent">
                            <div class="tab-pane fade show active" id="readme" role="tabpanel" aria-labelledby="readme-tab">
                                <MarkdownViewer PluginType="@plugin.Data.Type" PluginVersion="@plugin.Data.Version" />
                            </div>
                            <div class="tab-pane fade" id="versions" role="tabpanel" aria-labelledby="versions-tab">
                                <PluginVersionList PluginType="@plugin.Data.Type" />
@* 
                                <table class="table">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Version</th>
                                            <th>Downloads</th>
                                            <th>Last updated</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var version in plugin.Data.Versions)
                                        {
                                            <tr>
                                                <td>
                                                    <a href="/plugins/@plugin.Data.Type/@plugin.Data.Version">@version</a>
                                                </td>
                                                <td>
                                                    @plugin.Data.TotalDownload
                                                </td>
                                                <td>
                                                    @TimeHelper.GetOnlyDate(@plugin.Data.LastUpdated)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table> *@
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mx-auto bg-light">
                    <div class="card border-0 bg-light">
                        <div class="card-body p-3">
                            <div class="d-flex">
                                <div>
                                    <div class="h2 fw-bolder">About</div>
                                    <div class="mb-3">
                                        <i class="bi bi-download text-secondary"></i>
                                        @plugin.Data.TotalDownload.ToString("N0") total downloads
                                    </div>
                                    <div class="mb-3">
                                        <i class="bi bi-clock-history text-secondary"></i>
                                        last updated: @TimeHelper.GetHumanReadableDate(plugin.Data.LastUpdated)
                                    </div>
                                    @if (!string.IsNullOrEmpty(plugin.Data.ProjectUrl))
                                    {
                                    <div class="mb-3">
                                        <i class="bi bi-globe text-secondary"></i>
                                        <a href="@plugin.Data.ProjectUrl" target="_blank">Project Website</a>
                                    </div>
                                    }
                                    @if (!string.IsNullOrEmpty(plugin.Data.RepositoryUrl))
                                    {
                                        <div class="mb-3">
                                            <i class="bi bi-git text-secondary"></i>
                                            <a href="@plugin.Data.RepositoryUrl" target="_blank">Source Repository</a>
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(plugin.Data.License))
                                    {
                                        <div class="mb-3">
                                            <i class="bi bi-patch-check text-secondary"></i>
                                            @if (!string.IsNullOrEmpty(plugin.Data.LicenseUrl))
                                            {
                                                <a href="@plugin.Data.LicenseUrl" target="_blank">@plugin.Data.License</a>
                                            }
                                            else
                                            {
                                                @plugin.Data.License
                                            }
                                        </div>
                                    }
                                    @if (plugin.Data.Owners.Any())
                                    {
                                        <div class="mb-3">
                                            <h6>Owners</h6>
                                            @foreach (var owner in plugin.Data.Owners)
                                            {
                                                <a class="me-2" href="/profiles/@owner">@owner</a>
                                            }
                                        </div>
                                    }
                                    @if (plugin.Data.Tags.Any())
                                    {
                                        <div class="mb-3">
                                            <h6>Tags</h6>
                                            @foreach (var tag in plugin.Data.Tags)
                                            {
                                                <a href="/plugins?q=tag:@tag"><span class="badge border border-secondary text-secondary me-1">@tag</span></a>
                                            }
                                        </div>
                                    }
                                    @if (!string.IsNullOrEmpty(plugin.Data.Copyright))
                                    {
                                        <div class="mt-xxl-3">
                                            @plugin.Data.Copyright
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public string Type { get; set; } = "";

    [Parameter]
    public string Version { get; set; } = "";

    private string jsonCodeBlock => JsonSerializer.Serialize(new
    {
        Type,
        Version
    }, new JsonSerializerOptions { WriteIndented = true });

    Result<PluginDetailsResponse>? plugin;
    protected override async Task OnInitializedAsync()
    {
        plugin = await Stats.GetPluginDetails(Type, Version);
    }
}