@page "/plugins"

@using System.Security.Claims
@using FlowSynx.PluginRegistry.Application.Features.Plugins.Query.PluginsList
@using FlowSynx.PluginRegistry.Application.Wrapper
@using FlowSynx.Pluginregistry.Components.Shared
@using FlowSynx.Pluginregistry.Helpers
@using FlowSynx.Pluginregistry.Services
@using Microsoft.AspNetCore.WebUtilities
@using System.Net

@implements IDisposable

@inject NavigationManager Navigation
@inject IStatsApiService Stats

<PageTitle>Plugins</PageTitle>

<div class="container p-5">
    <div class="row">
        @if (plugins == null)
        {
            <div class="col-md-12 mx-auto">
                <div class="card mb-3">
                    <div class="card-body">
                        <p>Loading ...</p>
                    </div>
                </div>
            </div>
        }
        else if (!plugins.Succeeded)
        {
            <div class="col-md-12 mx-auto">
                <div class="card border-0 p-2 mb-2">
                    <h4 class="text-muted">There are @plugins?.Data?.Count() plugins</h4>
                </div>
                <div class="card mb-3">
                    <div class="card-body">
                        <p>Error in processing request: <br />@string.Join(Environment.NewLine, plugins?.Messages!)</p>
                    </div>
                </div>
            </div>
        }
        else if (plugins?.Data?.Count() == 0)
        {
            <div class="col-md-12 mx-auto">
                <div class="card border-0 p-2 mb-2">
                    <h4 class="text-muted">There are @plugins.Data.Count() plugins</h4>
                </div>
                <div class="card p-5">
                    <h4 class="text-muted">No plugins dound</h4>
                    <p class="text-secondary">We couldn’t find anything matching your search.</p>
                </div>
            </div>
        }
        else
        {
            <div class="col-md-12 mx-auto">
                <div class="card border-0 p-2 mb-2">
                    <h4 class="text-muted">There are @plugins?.Data?.Count() plugins</h4>
                </div>
                @foreach (var plugin in plugins?.Data!)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h4 class="card-title"><a href="/plugins/@plugin.Type/@plugin.Version">@plugin.Type</a></h4>
                            @if (plugin.Owners.Any())
                            {
                                <div>
                                    By:
                                    @foreach (var owner in plugin.Owners)
                                    {
                                        <a class="me-2" href="/profile/@owner">@owner</a>
                                    }
                                </div>
                            }
                            @{
                                @if (plugin.Tags.Any())
                                {
                                    <div>
                                        @foreach (var tag in plugin.Tags)
                                        {
                                            <a href="/plugins?q=@WebUtility.UrlEncode($"tag:{tag}")">
                                                <span class="badge border border-secondary text-secondary me-1">@tag</span>
                                            </a>
                                        }
                                    </div>
                                }
                            }
                            <div class="d-flex flex-column flex-md-row align-items-start text-start gap-0 mt-3">
                                <div class="me-3">
                                    <i class="bi bi-clock-history text-secondary"></i>
                                    last updated: @TimeHelper.GetHumanReadableDate(plugin.LastUpdated)
                                </div>
                                <div class="me-3">
                                    <i class="bi bi-tag text-secondary"></i>
                                    Latest version: @plugin.Version
                                </div>
                            </div>
                            <p class="mt-3 card-text">@plugin.Description</p>
                        </div>
                    </div>
                }

                <Pagination CurrentPage="@currentPage" TotalPages="@totalPages" />
            </div>
        }
    </div>
</div>

@code {
    PaginatedResult<PluginsListResponse>? plugins;
    private int currentPage = 1;
    private int totalPages => plugins == null ? 1 : plugins.TotalPages;
    private string? query = "";

    protected override async Task OnInitializedAsync()
    {
        Navigation.LocationChanged += OnLocationChanged;
        await LoadPage();
    }

    private async void OnLocationChanged(object? sender, LocationChangedEventArgs args)
    {
        await LoadPage();
        await InvokeAsync(StateHasChanged);
    }

    private async Task LoadPage()
    {
        var uri = new Uri(Navigation.Uri);
        if (!string.IsNullOrWhiteSpace(uri.Query))
        {
            var queryStrings = QueryHelpers.ParseQuery(uri.Query);

            if (queryStrings.TryGetValue("page", out var pageStr) && int.TryParse(pageStr, out var page))
                currentPage = Math.Max(page, 1);
            else
                currentPage = 1;

            if (queryStrings.TryGetValue("q", out var q))
                query = q;
            else
                query = "";
        }

        plugins = await Stats.GetPlugins(query, currentPage);
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= OnLocationChanged;
    }
}