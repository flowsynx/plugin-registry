@page "/plugins"

@using System.Security.Claims
@using FlowSynx.PluginRegistry.Application.Features.Plugins.Query.PluginsList
@using FlowSynx.PluginRegistry.Application.Wrapper
@using FlowSynx.Pluginregistry.Helpers
@using FlowSynx.Pluginregistry.Services

@inject NavigationManager Navigation
@inject IStatsApiService Stats

<PageTitle>Results</PageTitle>

<div class="container p-5">
    <div class="row">
        @if (plugins == null)
        {
            <div class="col-md-12 mx-auto">
                <div class="card mb-3">
                    <div class="card-body">
                        <p>Loading ...</p>
                    </div>
                </div>
            </div>
        }
        else if (!plugins.Succeeded)
        {
            <div class="col-md-12 mx-auto">
                <div class="card border-0 p-2 mb-2">
                    <h4 class="text-muted">There are @plugins.Data.Count() plugins</h4>
                </div>
                <div class="card mb-3">
                    <div class="card-body">
                        <p>Error in processing request: <br />@string.Join(Environment.NewLine, plugins.Messages)</p>
                    </div>
                </div>
            </div>
        }
        else if (plugins.Data.Count() == 0)
        {
            <div class="col-md-12 mx-auto">
                <div class="card border-0 p-2 mb-2">
                    <h4 class="text-muted">There are @plugins.Data.Count() plugins</h4>
                </div>
                <div class="card p-5">
                    <h4 class="text-muted">No plugins dound</h4>
                    <p class="text-secondary">We couldn’t find anything matching your search.</p>
                </div>
            </div>
        }
        else
        {
            <div class="col-md-12 mx-auto">
                <div class="card border-0 p-2 mb-2">
                    <h4 class="text-muted">There are @plugins.Data.Count() plugins</h4>
                </div>
                @foreach (var plugin in plugins.Data)
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <h4 class="card-title"><a href="/plugins/@plugin.Type/@plugin.Version">@plugin.Type</a></h4>
                            @if (plugin.Owners.Any()){
                                <div>
                                    By: 
                                    @foreach (var owner in plugin.Owners)
                                    {
                                        <a class="me-2" href="/profile/@owner">@owner</a>
                                    }
                                </div>
                            }
                            @{
                                var tags = StringHelper.GetTagsList(plugin.Tags);
                                @if (tags.Any()){
                                    <div>
                                        @foreach (var tag in tags)
                                        {
                                            <span class="badge border border-primary text-primary">@tag</span>
                                        }
                                    </div>
                                }
                            }
                            <div class="d-flex flex-column flex-md-row align-items-start text-start gap-0 mt-3">
                                <div class="me-3">
                                    <i class="bi bi-clock-history text-secondary"></i>
                                    last updated: @TimeHelper.GetLastUpdatedText(plugin.LastUpdated)
                                </div>
                                <div class="me-3">
                                    <i class="bi bi-tag text-secondary"></i>
                                    Latest version: @plugin.Version
                                </div>
                            </div>
                            <p class="mt-3 card-text">@plugin.Description</p>
                        </div>
                    </div>
                }

                <!-- Pagination -->
                <nav aria-label="Search results pagination">
                    <ul class="pagination justify-content-center mt-4">
                        <li class="page-item disabled">
                            <a class="page-link" href="#" tabindex="-1">Previous</a>
                        </li>
                        <li class="page-item"><a class="page-link" href="#">Next</a></li>
                    </ul>
                </nav>
            </div>
        }
    </div>
</div>

@code {
    Result<IEnumerable<PluginsListResponse>>? plugins;
    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(Navigation.Uri);
        var queryString = System.Web.HttpUtility.ParseQueryString(uri.Query);
        var query = queryString["q"];
        plugins = await Stats.GetPlugins(query);
    }
}